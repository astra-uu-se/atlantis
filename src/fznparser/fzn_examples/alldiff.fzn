predicate fzn_all_different_int(array [int] of var int: x);
var 0..5: X_INTRODUCED_0_;
var 0..5: X_INTRODUCED_1_;
var 0..5: X_INTRODUCED_2_;
var 0..5: X_INTRODUCED_3_;
var 0..5: X_INTRODUCED_4_;
var 0..5: X_INTRODUCED_5_;
var -5..5: X_INTRODUCED_7_ ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_8_ ::var_is_introduced :: is_defined_var;
var -5..5: X_INTRODUCED_9_ ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_10_ ::var_is_introduced :: is_defined_var;
var -5..5: X_INTRODUCED_11_ ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_12_ ::var_is_introduced :: is_defined_var;
var -5..5: X_INTRODUCED_13_ ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_14_ ::var_is_introduced :: is_defined_var;
var -5..5: X_INTRODUCED_15_ ::var_is_introduced :: is_defined_var;
var 0..5: X_INTRODUCED_16_ ::var_is_introduced :: is_defined_var;
array [1..6] of var int: x:: output_array([1..6]) = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_];
array [1..5] of var int: X_INTRODUCED_17_ ::var_is_introduced  = [X_INTRODUCED_8_,X_INTRODUCED_10_,X_INTRODUCED_12_,X_INTRODUCED_14_,X_INTRODUCED_16_];
constraint int_abs(X_INTRODUCED_7_,X_INTRODUCED_8_):: defines_var(X_INTRODUCED_8_);
constraint int_abs(X_INTRODUCED_9_,X_INTRODUCED_10_):: defines_var(X_INTRODUCED_10_);
constraint int_abs(X_INTRODUCED_11_,X_INTRODUCED_12_):: defines_var(X_INTRODUCED_12_);
constraint int_abs(X_INTRODUCED_13_,X_INTRODUCED_14_):: defines_var(X_INTRODUCED_14_);
constraint int_abs(X_INTRODUCED_15_,X_INTRODUCED_16_):: defines_var(X_INTRODUCED_16_);
constraint fzn_all_different_int(X_INTRODUCED_17_);
constraint fzn_all_different_int(x) :: implicit;
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_7_],0):: defines_var(X_INTRODUCED_7_);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_9_],0):: defines_var(X_INTRODUCED_9_);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_11_],0):: defines_var(X_INTRODUCED_11_);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_13_],0):: defines_var(X_INTRODUCED_13_);
constraint int_lin_eq([1,-1,-1],[X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_15_],0):: defines_var(X_INTRODUCED_15_);
solve  satisfy;
