{
  "plt": {
    "prop_mode_translator": {
      "short": [
        "i2o",
        "o2i –⁠ total",
        "o2i –⁠ prepared",
        "o2i –⁠ ad-hoc"
      ],
      "verbose": [
        "Input-to-output",
        "Output-to-input – total",
        "Output-to-input – prepared",
        "Output-to-input – ad-hoc"
      ]
    },
    "figsize": [
      10,
      16
    ],
    "fontsize": 10.5,
    "subplots_adjust": {
      "left": 0.060,
      "right": 0.999,
      "bottom": 0.05,
      "top": 0.92,
      "wspace": 0.20,
      "hspace": 0.5
    },
    "subplot": {
      "figsize": [
        10,
        9
      ]
    }
  },
  "benchmarks": {
    "ElementLinearTree": {
      "model_name": "Element Linear Tree",
      "abbreviation": "ELT",
      "yscale": "log",
      "method_name": {
        "probe_single_move_decision_var": "non-index variable",
        "probe_single_search_var": "non-index variable",
        "probe_single_non_index_var": "non-index variable",
        "probing_single_move_index_var": "index variable",
        "probe_single_index_var": "index variable"
      },
      "argument_order": [
        "Tree Count",
        "Tree Height",
        "PROPAGATION_MODE"
      ]
    },
    "ElementVarTree": {
      "model_name": "Element Tree",
      "abbreviation": "ET",
      "yscale": "log",
      "method_name": {
        "probe_single": "single",
        "probe_double": "double",
        "probe_all": "all search variables"
      },
      "argument_order": [
        "Tree Height",
        "Element dynamic input count",
        "PROPAGATION_MODE"
      ]
    },
    "FoldableBinaryTree": {
      "model_name": "Foldable Binary Tree",
      "abbreviation": "FBT",
      "yscale": "log",
      "method_name": {
        "probe_move_single": "single - query output",
        "probe_single": "single - query output",
        "probe_move_single_query_rnd": "single - query random",
        "probe_single_query_rnd": "single - query random",
        "probe_move_two": "double - query output",
        "probe_double": "double - query output",
        "probe_move_two_query_rnd": "double - query random",
        "probe_double_query_rnd": "all - query random",
        "probe_move_all": "all - query output",
        "probe_all": "all - query output",
        "probe_move_all_query_rnd": "all - query random",
        "probe_all_query_rnd": "all - query random"
      },
      "argument_order": [
        "Tree Height",
        "PROPAGATION_MODE"
      ]
    },
    "LinearAllDifferent": {
      "model_name": "Linear All Different",
      "abbreviation": "LAD",
      "yscale": "log",
      "method_name": {
        "probing_single_swap": "single swap",
        "probing_all_swap": "all swaps"
      },
      "argument_order": [
        "Overlapping input variables",
        "Input variable count",
        "PROPAGATION_MODE"
      ]
    },
    "LinearTree": {
      "model_name": "Linear Tree",
      "abbreviation": "LT",
      "yscale": "log",
      "method_name": {
        "probe_single_move": "single",
        "probe_single": "single",
        "probe_single_move_query_rnd": "single - query random",
        "probe_single_query_rnd": "single - query random",
        "probe_swap": "swap",
        "probe_swap_query_rnd": "swap - query random",
        "probe_all_move": "all",
        "probe_all_move_query_rnd": "all - query random"
      },
      "argument_order": [
        "Linear input count",
        "Tree Height",
        "PROPAGATION_MODE"
      ]
    },
    "AllInterval": {
      "yscale": "log",
      "model_name": "All-Interval Series",
      "abbreviation": "AIS",
      "method_name": {
        "probe_single_swap": "single swap"
      }
    },
    "CarSequencing": {
      "model_name": "Car Sequencing",
      "abbreviation": "CS",
      "method_name": {
        "probing_single": "swap two cars",
        "probe_single_swap": "swap two cars",
        "probing_all_swap": "all swaps",
        "probe_all_swap": "all swaps"
      },
      "group": 0,
      "argument_order": [
        "Car count",
        "PROPAGATION_MODE"
      ],
      "yscale": "log"
    },
    "GolombRuler": {
      "model_name": "Golomb Rulers",
      "abbreviation": "GR",
      "yscale": "log",
      "group": 0,
      "method_name": {
        "probe_single": "change single mark"
      },
      "argument_order": [
        "n",
        "PROPAGATION_MODE"
      ]
    },
    "Queens": {
      "model_name": "N-Queens",
      "abbreviation": "NQ",
      "yscale": "log",
      "group": 0,
      "method_name": {
        "probing_single_swap": "swap two queens",
        "probe_single_swap": "swap two queens",
        "probing_all_swap": "all swaps",
        "probe_all_swap": "all swaps"
      },
      "argument_order": [
        "Queen count",
        "PROPAGATION_MODE"
      ]
    },
    "MagicSquare": {
      "model_name": "Magic Square",
      "abbreviation": "MS",
      "yscale": "log",
      "group": 0,
      "method_name": {
        "probing_single_swap": "swap two numbers",
        "probe_single_swap": "swap two numbers",
        "probing_all_swap": "all swaps",
        "probe_all_swap": "all swaps"
      },
      "argument_order": [
        "n",
        "PROPAGATION_MODE"
      ]
    },
    "VesselLoading": {
      "model_name": "Vessel Loading",
      "abbreviation": "VL",
      "yscale": "log",
      "group": 0,
      "show_y_values": false,
      "method_name": {
        "rotate_rand_container": "Rotate random",
        "probe_single_relocate": "relocate single container"
      },
      "argument_order": [
        "n",
        "PROPAGATION_MODE"
      ]
    },
    "TSPTW": {
      "model_name": "Travelling Salesperson with Time Windows",
      "abbreviation": "TSPTW",
      "label": "Tour",
      "yscale": "log",
      "group": 0,
      "method_name": {
        "probe_three_opt": "single Three-opt",
        "probe_all_swap": "all Three-opts"
      },
      "argument_order": [
        "n",
        "PROPAGATION_MODE"
      ],
      "compare": [
        "TSPTWAllDiff"
      ]
    },
    "TSPTWAllDiff": {
      "model_name": "Travelling Salesperson with Time Windows",
      "abbreviation": "TSPTW",
      "ignore": true,
      "label": "Sequence",
      "yscale": "log",
      "group": 0,
      "method_name": {
        "probe_three_opt": "single Three-opt",
        "probe_all_swap": "all Three-opts"
      },
      "argument_order": [
        "Location count",
        "PROPAGATION_MODE"
      ],
      "compare": [
        "TSPTW"
      ]
    },
    "ExtremeDynamic": {
      "model_name": "Extreme Dynamic",
      "abbreviation": "ED",
      "yscale": "log",
      "group": 1
    },
    "ExtremeStatic": {
      "model_name": "Extreme Static",
      "abbreviation": "ES",
      "yscale": "log",
      "group": 1
    }
  }
}