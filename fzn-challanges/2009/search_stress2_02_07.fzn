array [1..2] of int: X_INTRODUCED_18_ = [1,-1];
var 1..7: X_INTRODUCED_1_;
var 1..7: X_INTRODUCED_2_;
var 1..7: X_INTRODUCED_3_;
var 1..7: X_INTRODUCED_4_;
var 1..7: X_INTRODUCED_5_;
var 1..7: X_INTRODUCED_6_;
var 1..7: X_INTRODUCED_7_;
var 1..7: X_INTRODUCED_9_;
var 0..7: X_INTRODUCED_10_;
var 0..7: X_INTRODUCED_11_;
var 0..7: X_INTRODUCED_12_;
var 0..7: X_INTRODUCED_13_;
var 0..7: X_INTRODUCED_14_;
var 0..7: X_INTRODUCED_15_;
var 0..7: X_INTRODUCED_16_;
array [1..16] of var int: X_INTRODUCED_0_:: output_array([1..16]) = [X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,0,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_];
array [1..16] of var int: X_INTRODUCED_19_ ::var_is_introduced  = [X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,0,X_INTRODUCED_9_,X_INTRODUCED_10_,X_INTRODUCED_11_,X_INTRODUCED_12_,X_INTRODUCED_13_,X_INTRODUCED_14_,X_INTRODUCED_15_,X_INTRODUCED_16_];
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_1_,X_INTRODUCED_2_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_9_,X_INTRODUCED_2_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_2_,X_INTRODUCED_3_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_2_,X_INTRODUCED_4_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_2_,X_INTRODUCED_5_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_2_,X_INTRODUCED_6_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_2_,X_INTRODUCED_7_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_1_,X_INTRODUCED_3_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_9_,X_INTRODUCED_3_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_3_,X_INTRODUCED_4_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_3_,X_INTRODUCED_5_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_3_,X_INTRODUCED_6_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_3_,X_INTRODUCED_7_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_1_,X_INTRODUCED_4_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_9_,X_INTRODUCED_4_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_4_,X_INTRODUCED_5_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_4_,X_INTRODUCED_6_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_4_,X_INTRODUCED_7_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_1_,X_INTRODUCED_5_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_9_,X_INTRODUCED_5_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_5_,X_INTRODUCED_6_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_5_,X_INTRODUCED_7_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_1_,X_INTRODUCED_6_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_9_,X_INTRODUCED_6_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_6_,X_INTRODUCED_7_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_1_,X_INTRODUCED_7_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_9_,X_INTRODUCED_7_],0);
constraint int_lin_ne(X_INTRODUCED_18_,[X_INTRODUCED_1_,X_INTRODUCED_9_],0);
solve :: int_search(X_INTRODUCED_19_,input_order,indomain_min,complete) satisfy;
