predicate alldifferent(array [int] of var int: x);
array [1..4] of int: X_INTRODUCED_12_ = [1,1,1,-1];
array [1..1] of int: X_INTRODUCED_25_ = [3];
var 1..9: X_INTRODUCED_0_;
var 1..9: X_INTRODUCED_1_;
var 1..9: X_INTRODUCED_2_;
var 1..9: X_INTRODUCED_3_;
var 1..9: X_INTRODUCED_4_;
var 1..9: X_INTRODUCED_5_;
var 1..9: X_INTRODUCED_6_;
var 1..9: X_INTRODUCED_7_;
var 1..9: X_INTRODUCED_8_;
var 3..24: magicSum:: output_var:: is_defined_var;
array [1..9] of var int: Magic:: output_array([1..3,1..3]) = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_];
array [1..9] of var int: X_INTRODUCED_9_ ::var_is_introduced  = [X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_];
array [1..4] of var int: X_INTRODUCED_27_ ::var_is_introduced  = [X_INTRODUCED_0_,X_INTRODUCED_2_,X_INTRODUCED_6_,X_INTRODUCED_8_];
constraint alldifferent(X_INTRODUCED_9_);
constraint int_lin_eq(X_INTRODUCED_12_,[X_INTRODUCED_0_,X_INTRODUCED_1_,X_INTRODUCED_2_,magicSum],0):: defines_var(magicSum);
constraint int_lin_eq(X_INTRODUCED_12_,[X_INTRODUCED_3_,X_INTRODUCED_4_,X_INTRODUCED_5_,magicSum],0);
constraint int_lin_eq(X_INTRODUCED_12_,[X_INTRODUCED_6_,X_INTRODUCED_7_,X_INTRODUCED_8_,magicSum],0);
constraint int_lin_eq(X_INTRODUCED_12_,[X_INTRODUCED_0_,X_INTRODUCED_3_,X_INTRODUCED_6_,magicSum],0);
constraint int_lin_eq(X_INTRODUCED_12_,[X_INTRODUCED_1_,X_INTRODUCED_4_,X_INTRODUCED_7_,magicSum],0);
constraint int_lin_eq(X_INTRODUCED_12_,[X_INTRODUCED_2_,X_INTRODUCED_5_,X_INTRODUCED_8_,magicSum],0);
constraint int_lin_eq(X_INTRODUCED_12_,[X_INTRODUCED_0_,X_INTRODUCED_4_,X_INTRODUCED_8_,magicSum],0);
constraint int_lin_eq(X_INTRODUCED_12_,[X_INTRODUCED_6_,X_INTRODUCED_4_,X_INTRODUCED_2_,magicSum],0);
constraint int_lin_eq(X_INTRODUCED_25_,[magicSum],45);
solve :: seq_search([int_search(X_INTRODUCED_27_,input_order,indomain_split,complete),int_search(Magic,occurrence,indomain_split,complete)]) satisfy;
